
/*
    xskat - a card game for 1 to 3 players.
    Copyright (C) 1998  Gunter Gerhardt

    This program is free software; you can redistribute it freely.
    Use it at your own risk; there is NO WARRANTY.
*/

#ifndef DEFS_H
#define DEFS_H

#ifdef __STDC__
#define VOID void
#else
#define VOID int
#endif

#endif /* DEFS_H */

/* Generated stuff follows:
#############################################################################*/
VOID irc_log();
VOID irc_out();
VOID irc_print();
VOID irc_printnl();
char *irc_getline();
VOID irc_xinput();
int irc_match();
VOID irc_sendnick();
VOID irc_pr_ss();
VOID irc_pr_bs();
VOID irc_pr_sd();
VOID irc_pr_ramsch();
VOID irc_pr_sramsch();
VOID irc_pr_kontra();
VOID irc_pr_bock();
VOID irc_pr_resumebock();
VOID irc_pr_spitze();
VOID irc_pr_revolution();
VOID irc_pr_klopfen();
VOID irc_pr_schenken();
VOID irc_pr_bockevents();
VOID irc_pr_alist();
VOID irc_pr_start();
VOID irc_pr_s1();
VOID irc_sendrules();
VOID irc_incidx();
VOID irc_sync();
VOID irc_sendsync();
VOID irc_checksync();
VOID irc_alarm();
VOID irc_talk();
char *irc_copyname();
int irc_senderok();
VOID irc_histsave();
VOID irc_sendbtev();
VOID irc_sendxyev();
VOID irc_sendsort();
VOID irc_sendschenken();
VOID irc_sendloeschen();
VOID irc_addcmd();
int irc_getcmd();
VOID irc_checkhist();
VOID irc_getrules();
VOID irc_getserverconf();
VOID irc_putserverconf();
VOID irc_putclientconf();
VOID irc_setpos();
VOID irc_getclientconf();
VOID irc_changenick();
VOID irc_checknick();
VOID irc_nickchanged();
VOID irc_msg();
VOID irc_parse();
VOID irc_connect();
VOID irc_init();
VOID init_null();
VOID testnull();
int kleiner_w();
int kleiner();
int hat();
int n_anwert();
int n_anspiel();
int n_abwert();
int n_abwerfen();
int minmax();
int minmaxfb();
int drunter();
int drunterdrue();
VOID m_nsp();
VOID m_nns();
VOID null_stich();
VOID null_sort();
int null_dicht();
VOID revolutiondist();
VOID start_ramsch();
VOID init_ramsch();
int zweibuben();
int bubeanspielen();
int sicher();
VOID moeglklein();
VOID nimm_bube();
VOID moegldrunter();
int ggdurchmarsch();
VOID m_bvr();
VOID m_bmr();
VOID m_bhr();
VOID m_bramsch();
int unsich_fb();
int comp_sramsch();
VOID ramsch_stich();
VOID ramsch_result();
int testgrandhand();
int left();
int right();
int iscomp();
VOID swap();
VOID setrnd();
int rndval();
int rnd();
VOID synerr();
int get_game();
VOID mischen();
int lower();
VOID sort();
VOID calc_rw();
VOID do_geben();
VOID do_sagen();
VOID do_passen();
VOID do_akzept();
VOID do_msagen();
VOID do_mhoeren();
VOID do_entsch();
VOID do_reizen();
VOID drueck();
VOID truempfe();
int tr_voll();
int sage_kontra();
int sage_re();
int testgrand();
VOID calc_inhand();
VOID calc_drueck();
VOID nextgame();
VOID save_skat();
int check_bockevents();
VOID update_list();
VOID do_grandhand();
VOID set_prot();
VOID do_handspiel();
VOID do_handok();
VOID do_ansagen();
VOID karobube();
int karobubespielen();
VOID do_angesagt();
VOID spielphase();
int higher();
VOID calc_result();
VOID get_next();
VOID save_list();
VOID setsum();
VOID modsum();
VOID read_opt_srpk();
VOID read_opt();
VOID save_opt();
VOID read_list();
VOID fill_st();
int maxnimm();
VOID next_stich();
VOID finishgame();
VOID do_next();
VOID calc_poss();
VOID c_high();
VOID calc_high();
int zweihoechste();
int ignorieren();
int gegenbuben();
int uebernehmen();
VOID schmieren();
int einstechen();
int niedrighoch();
int ueberdoerfer();
int trumpfausspielen();
int hochausspielen();
VOID schenke();
int zehnblank();
int fabwerfen();
VOID abwerfen();
int buttern();
int hatas();
int schnippeln();
VOID nichtspitze();
int spitzefangen();
int restbeimir();
VOID m_bvsp();
VOID m_bmsp();
VOID m_bhsp();
VOID m_bvns();
VOID m_bmns();
VOID m_bhns();
VOID m_bsp();
VOID m_bns();
VOID make_best();
VOID adjfb();
VOID do_spielen();
VOID computer();
VOID play();
VOID main();
VOID init_text();
int langidx();
VOID info_reiz();
VOID info_spiel();
VOID info_stich();
VOID clear_info();
VOID set_names();
int ismemb();
VOID init_di();
VOID init_dials();
VOID prverz();
int ob_disabled();
VOID hndl_btevent();
VOID hndl_events();
VOID getob_xywhbd();
VOID create_dial();
VOID create_di();
VOID remove_dial();
VOID remove_di();
VOID draw_3d();
VOID draw_dial();
VOID draw_di();
VOID refresh();
VOID prspnam();
VOID di_info();
VOID di_hand();
VOID next_grandhand();
VOID di_grandhand();
VOID di_term();
VOID di_ende();
VOID di_loesch();
VOID di_ansage();
VOID di_kontra();
VOID di_rekontra();
VOID di_konre();
VOID di_ktrnext();
VOID di_dicht();
VOID di_weiter();
VOID di_klopfen();
VOID di_schenken();
VOID di_geschenkt();
VOID di_wiederschenken();
VOID di_nichtschenken();
VOID di_schieben();
int di_verdoppelt();
VOID di_buben();
VOID di_spiel();
VOID list_fun();
VOID di_liste();
VOID pformat();
VOID prot_fun();
VOID im_skat();
VOID di_proto();
VOID di_result();
VOID di_delres();
VOID di_options();
VOID di_copyr();
VOID di_strateg();
VOID di_varianten();
VOID di_bockevents();
VOID di_verzoegerung();
VOID di_menubutton();
VOID di_wieder();
VOID change_gc();
VOID change_gcbg();
VOID change_gcxor();
int istrue();
VOID v_gtextnc();
VOID v_gtextc();
VOID v_gtext();
VOID clr_text();
VOID b_text();
VOID do_msaho();
VOID draw_skat();
VOID home_skat();
VOID nimm_stich();
VOID drop_card();
VOID create_colcards();
VOID alloc_colors();
unsigned long get_col();
VOID calc_desk();
VOID extractnam();
VOID usage();
VOID invopt();
VOID nomem();
VOID finish();
int ioerr();
VOID exitus();
int getdeffn();
VOID logit();
VOID xinitwin();
VOID xinitplayers();
VOID xinitres();
VOID xinit();
VOID waitt();
VOID stdwait();
VOID backgr();
VOID putdesk();
VOID drawcard();
VOID putcard();
VOID putback();
VOID hint_line();
VOID show_hint();
VOID putamark();
VOID putmark();
VOID remmark();
VOID movecard();
VOID homecard();
VOID givecard();
VOID initscr();
VOID spielendscr();
VOID revolutionsort();
VOID revolutionscr();
VOID clr_desk();
VOID draw_box();
VOID put_box();
VOID rem_box();
VOID inv_box();
VOID put_fbox();
VOID rem_fbox();
VOID inv_fbox();
int card_at();
int hndl_reizen();
int hndl_druecken();
int hndl_tauschen();
int hndl_spielen();
int hndl_nimmstich();
int hndl_button();
VOID setcurs();
